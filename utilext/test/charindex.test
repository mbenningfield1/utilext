#===============================================================================
#
# Written by: Mark Benningfield
#
# LICENSE: Public Domain -- see the file LICENSE.txt
#
#===============================================================================
#
# Tests for the charindex() function
#
#===============================================================================

source errors.tcl
setup db


test str_charindex-1.0 {(2-arg version) Verify NULL return for NULL source string} -body {
  return [elem0 [db eval {select charindex(NULL, 'abc');}]]
} -result NULL


test str_charindex-1.1 {(3-arg version) Verify NULL return for NULL source string} -body {
  return [elem0 [db eval {select charindex(NULL, 'abc', 2);}]]
} -result NULL


test str_charindex-1.2 {(2-arg version) Verify zero return for empty source} -body {
  return [elem0 [db eval {select charindex('', 'abc');}]]
} -result 0


test str_charindex-1.3 {(3-arg) Verify zero return for empty source} -body {
  return [elem0 [db eval {select charindex('', 'abc', 1);}]]
} -result 0


test str_charindex-1.4 {(2-arg) NULL return for NULL pattern arg} -body {
  return [elem0 [db eval {select charindex('abc', NULL);}]]
} -result NULL


test str_charindex-1.5 {(3-arg) NULL return for NULL pattern arg} -body {
  return [elem0 [db eval {select charindex('abc', NULL, 2);}]]
} -result NULL


test str_charindex-1.6 {(2-arg) Origin index for empty pattern arg} -body {
  return [elem0 [db eval {select charindex('abc', '');}]]
} -result 1


test str_charindex-1.7 {(3-arg) Named index for empty pattern arg} -body {
  return [elem0 [db eval {select charindex('abc', '', 2);}]]
} -result 2


test str_charindex-1.8 {Verify origin is used with NULL index arg} -body {
  return [elem0 [db eval {select charindex('Hello World', 'o', NULL);}]]
} -result 5


test str_charindex-1.9 {Verify conversion from float index arg} -body {
  return [elem0 [db eval {select charindex('Hello World', 'o', 6.8);}]]
} -result 8


test str_charindex-1.10 {Verify conversion from string index arg} -body {
  return [elem0 [db eval {select charindex('Hello World', 'o', '3');}]]
} -result 5


test str_charindex-1.11 {Verify error on empty string for index arg} -body {
  db eval {select charindex('Hello World', 'o', '');}
} -returnCodes 1 -result $SqliteRange


test str_charindex-1.12 {Verify error on too low index arg} -body {
  db eval {select charindex('ArgleBargle', 'gle', 0);}
} -returnCodes 1 -result $SqliteRange


test str_charindex-1.13 {Verify error on too high index} -body {
  db eval {select charindex('ArgleBargle', 'gle', 12);}
} -returnCodes 1 -result $SqliteRange


test str_charindex-1.14 {Pattern is at the start of source} -body {
  return [elem0 [db eval {select charindex('Hello World', 'Hello');}]]
} -result 1


test str_charindex-1.15 {Pattern is at start of source, wrong case} -body {
  return [elem0 [db eval {select charindex('Hello World', 'hello');}]]
} -result 0


test str_charindex-1.16 {Pattern is at end of source} -body {
  return [elem0 [db eval {select charindex('Hello World', 'World');}]]
} -result 7


test str_charindex-1.17 {Pattern is at end of source, wrong case} -body {
  return [elem0 [db eval {select charindex('Hello World', 'world');}]]
} -result 0


test str_charindex-1.18 {Pattern is in source somewhere} -body {
  return [elem0 [db eval {select charindex('How Now Brown Cow', 'Now Brown');}]]
} -result 5


test str_charindex-1.19 {Pattern is in source somewhere, wrong case} -body {
  return [elem0 [db eval {select charindex('How Now Brown Cow', 'now Brown');}]]
} -result 0


test str_charindex-1.20 {Source and pattern are equal} -body {
  return [elem0 [db eval {select charindex('Alas, poor Yorick', 'Alas, poor Yorick');}]]
} -result 1


test str_charindex-1.21 {Pattern and source are equal, wrong case} -body {
  return [elem0 [db eval {select charindex('Alas, poor Yorick', 'Alas, Poor Yorick');}]]
} -result 0


test str_charindex-1.22 {Source and pattern are equal, index miss (idx > 1)} -body {
  return [elem0 [db eval {select charindex('Alas, poor Yorick', 'Alas, poor Yorick', 2);}]]
} -result 0


test str_charindex-1.23 {Verify later occurrence is found} -body {
  return [elem0 [db eval {select charindex('Lorem ipsum dolorem', 'rem', 4);}]]
} -result 17


test str_charindex-1.24 {No match at all} -body {
  return [elem0 [db eval {select charindex('Yankee Doodle', 'tm');}]]
} -result 0


test str_charindex-1.25 {(2-arg) Verify unicode character matching} -body {
  setup_unicode8 pdb
  set a [elem0 [pdb eval {select charindex(source, pattern) from test_charindex1;}]]
  pdb close
  return $a
} -result 57


test str_charindex-1.26 {(3-arg) Verify unicode character matching} -body {
  setup_unicode8 pdb
  set a [elem0 [pdb eval {select charindex(source, pattern, 1) from test_charindex2;}]]
  set b [elem0 [pdb eval {select charindex(source, pattern, 2) from test_charindex2;}]]
  set c [elem0 [pdb eval {select charindex(source, pattern, 27) from test_charindex2;}]]
  pdb close
  return [list $a $b $c]
} -result {1 26 53}


db close
tcltest::cleanupTests

