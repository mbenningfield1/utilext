#===============================================================================
#
# Written by: Mark Benningfield
#
# LICENSE: Public Domain -- see the file LICENSE.txt
#
#===============================================================================
#
# Tests for the bigint_rem() function using UTF-16 database encoding
#
#===============================================================================

source errors.tcl
setup_16 db


test bigint_rem-1.0 {Verify NULL return with NULL lhs arg} -body {
  return [db eval {select bigint_rem(NULL, 'A2B3');}]
} -result NULL


test bigint_rem-1.1 {Verify NULL return with NULL rhs arg} -body {
  return [db eval {select bigint_rem('A2B3', NULL);}]
} -result NULL


test bigint_rem-1.2 {Verify normal result} -body {
  return [db eval {select bigint_rem('40', '03');}]
} -result 01


test bigint_rem-1.3 {Verify valid INTEGER lhs arg succeeds} -body {
  # 0x56 is 86
  return [db eval {select bigint_rem(56, '04');}]
} -result 02


test bigint_rem-1.4 {Verify valid INTEGER rhs arg succeeds} -body {
  return [db eval {select bigint_rem('56', 4);}]
} -result 02


test bigint_rem-1.5 {Verify invalid INTEGER lhs arg fails} -body {
  db eval {select bigint_rem(-36, '02');}
} -returnCodes 1 -result $SqliteFormat


test bigint_rem-1.6 {Verify invalid INTEGER rhs arg fails} -body {
  db eval {select bigint_rem('56', -2);}
} -returnCodes 1 -result $SqliteFormat


test bigint_rem-1.7 {Verify REAL lhs arg fails} -body {
  db eval {select bigint_rem(34.56, '02');}
} -returnCodes 1 -result $SqliteFormat


test bigint_rem-1.8 {Verify REAL rhs arg fails} -body {
  db eval {select bigint_rem('56', 2.2);}
} -returnCodes 1 -result $SqliteFormat


test bigint_rem-1.9 {Verify valid BLOB lhs arg succeeds} -body {
  # 0x3000300038003000 is '0080'
  return [db eval {select bigint_rem(X'3000300038003000', '05');}]
} -result 03


test bigint_rem-1.10 {Verify valid BLOB rhs arg succeeds} -body {
  # 0x30003500 is '05'
  return [db eval {select bigint_rem('0080', X'30003500');}]
} -result 03


test bigint_rem-1.11 {Verify invalid BLOB lhs arg fails} -body {
  db eval {select bigint_rem(X'A2B3', '05');}
} -returnCodes 1 -result $SqliteFormat


test bigint_rem-1.12 {Verify invalid BLOB rhs arg fails} -body {
  db eval {select bigint_rem('0080', X'05');}
} -returnCodes 1 -result $SqliteFormat


test bigint_rem-1.13 {Verify invalid TEXT lhs arg fails} -body {
  db eval {select bigint_rem('fred', '05');}
} -returnCodes 1 -result $SqliteFormat


test bigint_rem-1.14 {Verify invalid TEXT rhs arg fails} -body {
  db eval {select bigint_rem('0080', 'fred');}
} -returnCodes 1 -result $SqliteFormat


test bigint_rem-1.15 {Verify error with zero rhs arg} -body {
  db eval {select bigint_rem('0080', '00');}
} -returnCodes 1 -result $SqliteError


db close
tcltest::cleanupTests
