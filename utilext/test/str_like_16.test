#===============================================================================
#
# Written by: Mark Benningfield
#
# LICENSE: Public Domain -- see the file LICENSE.txt
#
#===============================================================================
#
# Tests for the like() function using UTF-16 database encoding
#
#===============================================================================

source errors.tcl
setup db


set patterns {
  { "" "" 1 } { "" "%" 1 } { " " "%" 1 } { "abc" "%" 1 } { "%" "%" 1 }
  { "" "_" 0 } { "a" "_" 1 } { "ab" "_" 0 } { "appleton" "apple%" 1 }
  { "app" "%__" 1 } { "ap" "%___" 0 } { "app" "%___" 1 } { "app" "___%" 1 }
  { "ap" "___%" 0 } { "abcHelloabcdworld" "%___Hello%____world" 1 }
  { "abcdeHelloxyzwfmpgworld" "%___Hello%____world" 1 }
  { "abcHelloabcdworld" "___%Hello____%world" 1 }
  { "abcdeHelloxyzwfmpgworld" "___%Hello____%world" 1 }
  { "abHelloabcworld" "%___Hello%___world" 0 }
  { "abcdHelloabworld" "%___Hello%___world" 0 }
  { "File.txt" "%File.txt" 1 }
  { "MyFile.txt" "%File.txt" 1 }
  { "MyFile.txt.img" "%File.txt" 0 }
  { "File.txt.img" "%File.txt" 0 }
  { "MyFile001.txt.img" "%File.txt" 0 }
  { "File.txt" "File.txt%" 1 }
  { "MyFile.txt" "File.txt%" 0 }
  { "MyFile.txt.img" "File.txt%" 0 }
  { "File.txt.img" "File.txt%" 1 }
  { "MyFile001.txt.img" "File.txt%" 0 }
  { "File.txt" "%File.txt%" 1 }
  { "MyFile.txt" "%File.txt%" 1 }
  { "MyFile.txt.img" "%File.txt%" 1 }
  { "File.txt.img" "%File.txt%" 1 }
  { "MyFile001.txt.img" "%File.txt%" 0 }
  { "File.txt" "%File%.txt" 1 }
  { "MyFile.txt" "%File%.txt" 1 }
  { "MyFile.txt.img" "%File%.txt" 0 }
  { "File.txt.img" "%File%.txt" 0 }
  { "MyFile001.txt.img" "%File%.txt" 0 }
  { "MyFile001.txt" "%File%.txt" 1 }
  { "File.txt" "File%.txt%" 1 }
  { "MyFile.txt" "File%.txt%" 0 }
  { "MyFile.txt.img" "File%.txt%" 0 }
  { "File.txt.img" "File%.txt%" 1 }
  { "MyFile001.txt.img" "File%.txt%" 0 }
  { "MyFile001.txt" "File%.txt%" 0 }
  { "File.txt" "%File%.txt%" 1 }
  { "MyFile.txt" "%File%.txt%" 1 }
  { "MyFile.txt.img" "%File%.txt%" 1 }
  { "File.txt.img" "%File%.txt%" 1 }
  { "MyFile001.txt.img" "%File%.txt%" 1 }
  { "MyFile001.txt" "%File%.txt%" 1 }
  { "1File3.txt4" "_File_.txt_" 1 }
  { "1File.txt4" "_File_.txt_" 0 }
  { "1File3.txt" "_File_.txt_" 0 }
  { "File3.txt4" "_File_.txt_" 0 } { "__" "_" 0 }
  { "abc" "__" 0 } { "ab" "__" 1 }
}

set escPatterns {
  { "" "" "/" 1 }
  { "" "%/" "/" 0 }
  { "" "%" "/" 1 }
  { "82%" "__/%" "/" 1 }
  { "82%" "__/%" "|" 0 }
  { "80/20 Rule" "__//__%" "/" 1 }
  { "80/20 Rule" "__///__%" "/" 0 }
}

test patterns {Verify single and multi match patterns} -body {
  for {set i 0} {$i < [llength $patterns]} {incr i} {
    set source [lindex $patterns $i 0]
    set pattern [lindex $patterns $i 1]
    set result [lindex $patterns $i 2]
    set a [db eval {select :source like :pattern;}]
    if {$a != $result} {puts "test_patterns failed with i = $i"}
  }
  for {set j 0} {$j < [llength $escPatterns]} {incr j} {
    set source [lindex $escPatterns $j 0]
    set pattern [lindex $escPatterns $j 1]
    set esc [lindex $escPatterns $j 2]
    set result [lindex $escPatterns $j 3]
    set a [db eval {select :source like :pattern escape :esc;}]
    if {$a != $result} {puts "test_patterns failed with j = $j"}
  }  
} -output {} -result {}


test case1 {Verify case-insensitive match} -body {
  return [db eval {select 'apple' like 'APPLE';}]
} -result {1}


test case2 {Verify case-insensitive match} -body {
  return [db eval {select 'APPLE' like 'apple';}]
} -result {1}


test case3 {Verify case-sensitive match} -body {
  db eval {select set_case_sensitive_like(true);}
  set a [db eval {select 'apple' like 'APPLE';}]
  db eval {select set_case_sensitive_like(false);}
  return $a
} -result {0}


test escape_null {Verify NULL return with NULL escape character} -body {
  return [elem0 [db eval {select 'abc' like '%ab' escape NULL;}]]
} -result NULL


test escape_bad_len {Verify error on too long escape} -body {
  db eval {select 'abc' like '%ab' escape 'bc';}
} -returnCodes 1 -result $SqliteMisuse


test pattern_limit {Verify LIKE_PATTERN_LENGTH is honored} -body {
  set limit [db limit like_pattern_length 25]
  catch {db eval {select 'abc' like 'abc% bake charlie delta echo';}} retVal
  db limit like_pattern_length $limit
  return $retVal
} -result $SqliteTooBig


test source_null {Verify NULL return for NULL source arg} -body {
  return [elem0 [db eval {select NULL like '%abc%';}]]
} -result NULL


test pattern_null {Verify NULL return for NULL pattern arg} -body {
  return [elem0 [db eval {select 'abc' like NULL;}]]
} -result NULL


test unicode {Verify match and no match for case-insensitive unicode} -body {
  setup_unicode16 pdb
  set a [pdb eval {select source like pattern from test_like where id = 1;}]
  set b [pdb eval {select source like pattern from test_like where id = 2;}]
  pdb close
  return "$a $b"
} -result {1 1}


test unicode_case {Verify match and no match for case-sensitive unicode} -body {
  setup_unicode16 pdb
  pdb eval {select set_case_sensitive_like(true);}
  set a [pdb eval {select source like pattern from test_like where id = 1;}]
  set b [pdb eval {select source like pattern from test_like where id = 2;}]
  pdb eval {select set_case_sensitive_like(false);}
  pdb close
  return "$a $b"
} -result {1 0}


db close
tcltest::cleanupTests
