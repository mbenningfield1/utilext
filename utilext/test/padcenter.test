#===============================================================================
#
# Written by: Mark Benningfield
#
# LICENSE: Public Domain -- see the file LICENSE.txt
#
#===============================================================================
#
# Tests for the padcenter() function
#
#===============================================================================

source errors.tcl
setup db


test str_padcenter-1.0 {Verify NULL return for NULL source arg} -body {
  return [elem0 [db eval {select padcenter(NULL, 4);}]]
} -result NULL


test str_padcenter-1.1 {Verify source return for NULL length arg} -body {
  return [elem0 [db eval {select padcenter('George', NULL);}]]
} -result George


test str_padcenter-1.2 {Verify source return with source longer than length} -body {
  return [elem0 [db eval {select padcenter('Hello World', 5);}]]
} -result {Hello World}


test str_padcenter-1.3 {Verify even padding} -body {
  return [elem0 [db eval {select padcenter('Author', 12);}]]
} -result {   Author   }


test str_padcenter-1.4 {Verify odd padding} -body {
  return [elem0 [db eval {select padcenter('Title', 10);}]]
} -result {  Title   }


test str_padcenter-1.5 {Verify source return with zero length arg} -body {
  return [elem0 [db eval {select padcenter('Subject', 0);}]]
} -result Subject


test str_padcenter-1.6 {Verify error with too low length arg} -body {
  db eval {select padcenter('Albert', -1);}
} -returnCodes 1 -result $SqliteMisuse


test str_padcenter-1.7 {Verify padding with unicode chars} -body {
  setup_unicode8 pdb
  set a [pdb eval {select padcenter(source, 36) from test_padcenter where id = 1;}]
  set b [pdb eval {select result from test_padcenter where id = 1;}]
  pdb close
  return [string equal $a $b]
} -result {1}


test str_padcenter-1.8 {Verify source return with length less than character count} -body {
  setup_unicode8 pdb
  set a [pdb eval {select padcenter(source, 26) from test_padcenter where id = 2;}]
  set b [pdb eval {select result from test_padcenter where id = 2;}]
  pdb close
  return [string equal $a $b]
} -result {1}


db close
tcltest::cleanupTests

