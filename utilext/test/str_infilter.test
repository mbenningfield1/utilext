#===============================================================================
#
# Written by: Mark Benningfield
#
# LICENSE: Public Domain -- see the file LICENSE.txt
#
#===============================================================================
#
# Tests for the infilter() function
#
#===============================================================================

source errors.tcl
setup db


test source_null {Verify NULL return on NULL source arg} -body {
  return [elem0 [db eval {select infilter(NULL, 'aeiou');}]]
} -result NULL


test match_null {Verify NULL return on NULL match arg} -body {
  return [elem0 [db eval {select infilter('abcde', NULL);}]]
} -result NULL


test source_empty {Verify empty return on empty source arg} -body {
  return [elem0 [db eval {select infilter('', 'aeiou');}]]
} -result {}


test match_empty {Verify empty return on empty match arg} -body {
  return [elem0 [db eval {select infilter('abcde', '');}]]
} -result {}


test normal {Verify normal matching} -body {
  return [elem0 [db eval {select infilter('albuquerque', 'aeiou');}]]
} -result auueue


test match_case {Verify case-sensitive matching} -body {
  return [elem0 [db eval {select infilter('Albuquerque', 'aeiou');}]]
} -result uueue


test match_int {Verify conversion from integer match arg} -body {
  return [elem0 [db eval {select infilter('Angle is 45 degrees', 45);}]]
} -result 45


test match_real {Verify conversion from real match arg} -body {
  return [elem0 [db eval {select infilter('Temp is 98.6 degrees', 8.60);}]]
} -result 8.6


test match_real_cast {Verify conversion from exponential real has expected result} -body {
  return [elem0 [db eval {select infilter('Temp is 98.6 degrees', 0.000086);}]]
} -result e8.6eee ;# SQLite casts 0.000086 to '8.6e-05'


test unicode1 {Verify correct matching with unicode chars} -body {
  setup_unicode8 pdb
  set a [pdb eval {select infilter(source, match) from test_infilter where id = 1;}]
  set b [pdb eval {select result from test_infilter where id = 1;}]
  pdb close
  return [string equal $a $b]
} -result {1}


test unicode2 {Verify case-sensitive matching with unicode chars} -body {
  setup_unicode8 pdb
  set a [elem0 [pdb eval {select infilter(source, match) from test_infilter where id = 2;}]]
  pdb close
  return [string equal $a ""]
} -result {1}


db close
tcltest::cleanupTests
