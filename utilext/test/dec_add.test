#===============================================================================
#
# Written by: Mark Benningfield
#
# LICENSE: Public Domain -- see the file LICENSE.txt
#
#===============================================================================
#
# Tests for the multi-arg dec_add() function
#
#===============================================================================
 
source errors.tcl
setup db


test dec_add-1.0 {Verify that NULL is returned with all args NULL} -body {
  return [elem0 [db eval {select dec_add(NULL, NULL, NULL);}]]
} -result NULL


test dec_add-1.1 {Verify that a NULL arg is skipped with non-NULLs} -body {
  return [elem0 [db eval {select dec_add('-4380.29469', NULL, '36410.48977');}]]
} -result 32030.19508


test dec_add-1.2 {Verify NULL return with zero arguments} -body {
  return [elem0 [db eval {select dec_add();}]]
} -result NULL


test dec_add-1.3 {Verify result with only one argument} -body {
  return [elem0 [db eval {select dec_add('3.33');}]]
} -result 3.33


test dec_add-1.4 {Just add up some numbers} -body {
  return [elem0 [db eval {select dec_add('3.33', '4.44', '5.55');}]]
} -result 13.32


test dec_add-1.5 {Verify a range error on a too-big arg} -body {
  db eval {select dec_add(:DEC_MAX, '1.0');}
} -returnCodes 1 -result $SqliteTooBig


test dec_add-1.6 {Verify a range error on a too-small arg} -body {
  db eval {select dec_add(:DEC_MIN, '-1.0')}
} -returnCodes 1 -result $SqliteTooBig


test dec_add-1.7 {Verify a parse error on non-numeric args} -body {
  db eval {select dec_add('3.22', '4.56', 'fred')}
} -returnCodes 1 -result $SqliteFormat


test dec_add-1.8 {Verify that we can handle up to the limit of function args} -body {
  set values {
  -4380.29469 36410.48977  9570.39129  29232.48828  6510.46604
  30099.13659 3222.33728   27608.4690  24148.6285   10418.5095
  16253.49166 195.24349    24015.11507 3649.29653   37641.44856
  4871.36339  14320.1422   38794.39389 33267.41024  41613.1633
  35425.12737 485.4853     878.32101   207.39902    32553.21921
  31744.33898 -38290.11222 36929.5214  29275.12061  24962.48063
  35481.49579 11188.11653  41733.43759 49339.1801   44934.38219
  21423.33123 14671.8785   19670.3517  48682.45342  23472.41913
  11300.13747 47100.15721  13112.20973 48049.3098   14492.33581
  10115.21206 16063.43550  16152.35846 1549.38831   13119.7118
  32762.48406 44967.44333  -499.48620  19227.29505  41552.33412
  6531.33932  38589.33048  36763.21735 2480.45466   48541.20761
  45710.46241 37308.11353  28105.217   17061.21120  42633.33824
  1968.9851   32223.16354  9152.12894  18779.2767   15223.14492
  1746.18545  11546.31080  27050.26182 32616.33014  6788.44416
  33366.6083  40290.42358  11408.36520 -11099.33615 16229.282
  31559.48107 36871.7729   31445.46680 1710.22236   23897.23869
  2957.49712  30244.34049  19015.27166 34696.6229   34302.1923
  17600.34047 14333.48217  458.45885   19561.39864  4947.22632
  1795.35163  36537.14941  32932.3639  31673.3818   49634.30370
  24473.10381 9118.32918   41459.33653 25838.6241   -23344.34241
  1824.4871   49312.14307  32681.47512 33775.38653  7271.35560
  27119.11845 17289.1265   22075.17794 13176.15303  1118.15377
  45492.30879 6594.3933    27450.7220  24929.31414  6759.16804
  20047.13321 16521.20705  20808.46924 35851.22231  32260.35420
  19863.43019 46546.14075
  }
  
  set sums {
  -4380.29469   32030.19508   41600.58637   70833.07465
  77343.54069   107442.67728  110665.01456  138273.48356
  162422.11206  172840.62156  189094.11322  189289.35671
  213304.47178  216953.76831  254595.21687  259466.58026
  273786.72246  312581.11635  345848.52659  387461.68989
  422886.81726  423372.30256  424250.62357  424458.02259
  457011.24180  488755.58078  450465.46856  487394.98996
  516670.11057  541632.59120  577114.08699  588302.20352
  630035.64111  679374.82121  724309.20340  745732.53463
  760404.41313  780074.76483  828757.21825  852229.63738
  863529.77485  910629.93206  923742.14179  971791.45159
  986283.78740  996398.99946  1012462.43496 1028614.79342
  1030164.18173 1043283.89353 1076046.37759 1121013.82092
  1120514.33472 1139741.62977 1181293.96389 1187825.30321
  1226414.63369 1263177.85104 1265658.30570 1314199.51331
  1359909.97572 1397218.08925 1425323.30625 1442384.51745
  1485017.85569 1486986.84079 1519210.00433 1528362.13327
  1547141.40997 1562364.55489 1564110.74034 1575657.05114
  1602707.31296 1635323.64310 1642112.08726 1675478.69556
  1715769.11914 1727177.48434 1716078.14819 1732307.43019
  1763866.91126 1800738.68416 1832184.15096 1833894.37332
  1857791.61201 1860749.10913 1890993.44962 1910008.72128
  1944705.34418 1979007.53648 1996607.87695 2010941.35912
  2011399.81797 2030961.21661 2035908.44293 2037703.79456
  2074240.94397 2107173.30787 2138846.68967 2188480.99337
  2212954.09718 2222072.42636 2263531.76289 2289370.38699
  2266026.04458 2267850.53168 2317162.67475 2349844.14987
  2383619.53640 2390890.89200 2418010.01045 2435299.13695
  2457374.31489 2470550.46792 2471668.62169 2517160.93048
  2523755.32378 2551206.04578 2576135.35992 2582894.52796
  2602941.66117 2619462.86822 2640271.33746 2676122.55977
  2708382.91397 2728246.34416 2774792.48491
  }
  set n [db limit function_arg -1]
  for {set i 1} {$i < $n} {incr i} {
    set args [string cat [join [lrange $values 0 $i] {', '}] "');"]
    set query [string cat "select dec_add('" $args]
    set a [elem0 [db eval $query]]
    set b [lindex $sums $i]
    if {$a ne $b} {puts "test_max_args failed in test_add i = $i"}
  }
} -output {} -result {}


db close
tcltest::cleanupTests

